// <auto-generated />
using System;
using Imi.Project.Api.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imi.Project.Api.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasApprovedTerms")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000001",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c8554266-b401-4519-9aeb-a9283053fc58",
                            Email = "admin@imi.be",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@IMI.BE",
                            NormalizedUserName = "IMIADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEKyB2p8wfQHi0Ia6TULSIezqZZQ4BAsDT0RsJMbCXna14MrewbILfYHX2nTpKCtvow==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VVPCRDAS3MJWQD5CSW2GWPRADBXEZINA",
                            TwoFactorEnabled = false,
                            UserName = "ImiAdmin"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000002",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2b3ba136-4654-49c1-8329-1e266a1f7453",
                            Email = "user@imi.be",
                            EmailConfirmed = true,
                            HasApprovedTerms = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@IMI.BE",
                            NormalizedUserName = "IMIUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEHj60BvW9LyTI8qdp/90qWarTsvPuGqOZQvAMAu++NPGS+hrbTgXTTa09CUlW5nCvQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "WWPCRDAS3MJWQD5CSW2GWPRADBXEZINA",
                            TwoFactorEnabled = false,
                            UserName = "ImiUser"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000003",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fad66526-654c-4000-b7b3-30349c41f171",
                            Email = "refuser@imi.be",
                            EmailConfirmed = true,
                            HasApprovedTerms = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "REFUSER@IMI.BE",
                            NormalizedUserName = "IMIREFUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEL1gUwl9vAdHFwSMJVHECHUVdZjxCDrlUKtX8N6oaRyzV6lSIdTa4+sCwDm37voGjg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "YYPCRDAS3MJWQD5CSW2GWPRADBXEZINA",
                            TwoFactorEnabled = false,
                            UserName = "ImiRefuser"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b25380fd-a7db-4af2-81dc-a2f7eedd8616"),
                            Name = "breakfast"
                        },
                        new
                        {
                            Id = new Guid("3e9d01b1-4f05-4730-b72c-a4a2c9227c7c"),
                            Name = "lunch"
                        },
                        new
                        {
                            Id = new Guid("63088f18-a5a4-4774-a919-11cb0b59d6f2"),
                            Name = "dinner"
                        },
                        new
                        {
                            Id = new Guid("166135bb-92aa-407d-b07c-20847ccbab75"),
                            Name = "snack"
                        },
                        new
                        {
                            Id = new Guid("edc0a329-aaa6-4290-8ea9-446844ba4f47"),
                            Name = "side dish"
                        },
                        new
                        {
                            Id = new Guid("b1c6f419-022e-4a39-9635-eb49610afb1a"),
                            Name = "beverage"
                        },
                        new
                        {
                            Id = new Guid("8e23a30d-950a-4fcd-8514-9b4a0bd221cd"),
                            Name = "dessert"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Diet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Diets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f0541e43-d655-4572-9c66-9bfba26a626d"),
                            Name = "anything"
                        },
                        new
                        {
                            Id = new Guid("29034587-2814-4d82-ad04-4b92dd7e7a87"),
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("938ea0e0-5336-49e6-b0df-b4aef759dd08"),
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("fecf1bc5-d3ef-4646-8eb0-3dfd87111b09"),
                            Name = "paleo"
                        },
                        new
                        {
                            Id = new Guid("4244b52a-dc39-4c24-91e9-4aa15f14ca42"),
                            Name = "keto"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.FavoriteRecipe", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RecipeId", "ApplicationUserId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("FavoriteRecipes");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f27980d-9715-4ae0-9862-d9a31b463643"),
                            Name = "red onion"
                        },
                        new
                        {
                            Id = new Guid("14ae69a7-6687-4541-b7de-01127e92792b"),
                            Name = "salt"
                        },
                        new
                        {
                            Id = new Guid("d0f9aecb-223b-4f2b-a526-762f133bce19"),
                            Name = "pepper"
                        },
                        new
                        {
                            Id = new Guid("77e3f942-11f8-4777-8c22-bdd6a9a6bf20"),
                            Name = "avocado"
                        },
                        new
                        {
                            Id = new Guid("97fd73c1-4fa4-4ee3-b74c-7f3f1a575e3d"),
                            Name = "vanilla"
                        },
                        new
                        {
                            Id = new Guid("6692d32b-cce3-45f7-8551-6daac00157d7"),
                            Name = "kosher salt"
                        },
                        new
                        {
                            Id = new Guid("dc1acf67-02ce-4195-8501-313f9ca9ca96"),
                            Name = "unsweetened cacao powder"
                        },
                        new
                        {
                            Id = new Guid("d733c8f2-af08-43a8-bd07-66736c165214"),
                            Name = "bell pepper"
                        },
                        new
                        {
                            Id = new Guid("fbc241d8-d78f-43d9-894b-d8884307b3f5"),
                            Name = "garlic"
                        },
                        new
                        {
                            Id = new Guid("016d40e9-2717-47ed-aea1-c5c17ea30cf3"),
                            Name = "chili powder"
                        },
                        new
                        {
                            Id = new Guid("8bd1d2e8-1d8c-49ba-ad3d-526dae7cbc30"),
                            Name = "ground cumin"
                        },
                        new
                        {
                            Id = new Guid("083f7222-e473-4143-9cb7-e1af84851dd0"),
                            Name = "dried oregano"
                        },
                        new
                        {
                            Id = new Guid("08136d5c-60e5-4194-9519-71eed7e43c6b"),
                            Name = "smoked paprika"
                        },
                        new
                        {
                            Id = new Guid("ac4c89ec-3197-459c-b73e-0bae67fe7a45"),
                            Name = "firm tofu"
                        },
                        new
                        {
                            Id = new Guid("ca2199b7-f8dc-4e90-bc70-5f035379f293"),
                            Name = "oat milk"
                        },
                        new
                        {
                            Id = new Guid("81aacc33-28ff-4134-8e57-a3a389ebd6ba"),
                            Name = "turmeric"
                        },
                        new
                        {
                            Id = new Guid("ddb921d6-0db4-42d7-b8f9-79aefe6ab7a1"),
                            Name = "nutritional yeast"
                        },
                        new
                        {
                            Id = new Guid("90fd3b57-8529-4ebb-8d20-cb050134659b"),
                            Name = "banana"
                        },
                        new
                        {
                            Id = new Guid("745c7145-c67d-417a-bff5-f7d89dcfbc2d"),
                            Name = "almond milk"
                        },
                        new
                        {
                            Id = new Guid("7314a433-7ed7-460e-b9c7-9d164c61f173"),
                            Name = "greek yogurt"
                        },
                        new
                        {
                            Id = new Guid("588ac87c-5e0c-408e-a03b-429344f90b48"),
                            Name = "strawberries"
                        },
                        new
                        {
                            Id = new Guid("ccc5bd14-e3f0-45c5-9da2-d6bffb143a04"),
                            Name = "raspberries"
                        },
                        new
                        {
                            Id = new Guid("357effcd-160c-4126-a470-01d5e0109216"),
                            Name = "blackberries"
                        },
                        new
                        {
                            Id = new Guid("55378261-d8d3-45f8-826f-6d70ebf6caac"),
                            Name = "tuna"
                        },
                        new
                        {
                            Id = new Guid("ee40da14-1c7d-4986-b06a-d22cdcc84257"),
                            Name = "lime"
                        },
                        new
                        {
                            Id = new Guid("5d9247a4-f9db-4e3d-b861-133bb1d4cbd0"),
                            Name = "celery"
                        },
                        new
                        {
                            Id = new Guid("dcf97f85-7af4-49ff-a89a-27806742abff"),
                            Name = "jalapenos"
                        },
                        new
                        {
                            Id = new Guid("31954772-5363-4681-9cdd-88e462fc7617"),
                            Name = "heavy cream"
                        },
                        new
                        {
                            Id = new Guid("c40532ee-a38a-47e9-8898-3cb9e476f16e"),
                            Name = "keto chocolate chips"
                        },
                        new
                        {
                            Id = new Guid("f34d7d0f-4bf0-40bd-bf31-368403138aab"),
                            Name = "honey"
                        },
                        new
                        {
                            Id = new Guid("1396e93a-41d7-4984-a274-184b77e0afa6"),
                            Name = "bacon"
                        },
                        new
                        {
                            Id = new Guid("75591f19-3a32-48df-9c8e-19b4b0f2920d"),
                            Name = "yellow onion"
                        },
                        new
                        {
                            Id = new Guid("4883e3d8-8418-4111-ae27-e7173bd11a2a"),
                            Name = "celery stalks"
                        },
                        new
                        {
                            Id = new Guid("f2d486d4-3319-4352-b1a2-add18993ed23"),
                            Name = "lean ground beef"
                        },
                        new
                        {
                            Id = new Guid("2cbbdaf1-0d36-482d-80e0-37d3423664c3"),
                            Name = "vanilla ice cream"
                        },
                        new
                        {
                            Id = new Guid("81aba039-743f-4d59-b213-285ba4fd3097"),
                            Name = "milk"
                        },
                        new
                        {
                            Id = new Guid("9ff9358d-76ee-4703-895b-d0a1371da3b1"),
                            Name = "whipped topping"
                        },
                        new
                        {
                            Id = new Guid("bdc470ec-50b2-4e17-a15f-05449117af4e"),
                            Name = "sprinkles"
                        },
                        new
                        {
                            Id = new Guid("628442fa-5b33-4801-81ff-0e785ff2b276"),
                            Name = "brown rice"
                        },
                        new
                        {
                            Id = new Guid("f272bf89-f85e-4424-94de-a2e2677ca461"),
                            Name = "green onion"
                        },
                        new
                        {
                            Id = new Guid("e1ad2b89-4a1e-4bce-80c0-811ff9a4c336"),
                            Name = "peas"
                        },
                        new
                        {
                            Id = new Guid("72c4a267-5cdc-4b9b-9cb8-29046548d981"),
                            Name = "carrots"
                        },
                        new
                        {
                            Id = new Guid("7c3e5129-4674-4302-a9c7-445ad1003d0f"),
                            Name = "soy sauce"
                        },
                        new
                        {
                            Id = new Guid("514c7f84-86ca-4698-a64f-afcfc9862ba8"),
                            Name = "peanut butter"
                        },
                        new
                        {
                            Id = new Guid("5f928a6f-af9e-4dff-80af-3a2ef3e0deb1"),
                            Name = "maple syrup"
                        },
                        new
                        {
                            Id = new Guid("2be6e6be-2730-49b1-b3a6-d8bcc83ca23d"),
                            Name = "sesame oil"
                        },
                        new
                        {
                            Id = new Guid("4df4f98a-8dbe-4a84-b58c-5857ec0c2fc4"),
                            Name = "all-purpose flour"
                        },
                        new
                        {
                            Id = new Guid("5ef2c63d-11fe-414d-b2a6-744c00f0e63b"),
                            Name = "baking powder"
                        },
                        new
                        {
                            Id = new Guid("29d04ae2-aaff-445e-b5ab-88d1c63b4036"),
                            Name = "white sugar"
                        },
                        new
                        {
                            Id = new Guid("6210ff3a-3eae-41ab-9b32-f03f9b6ec22a"),
                            Name = "butter"
                        },
                        new
                        {
                            Id = new Guid("3ad0ee1f-bddc-4347-9b98-9f5a963a804f"),
                            Name = "egg"
                        },
                        new
                        {
                            Id = new Guid("571e7109-ba66-4b22-ad12-71403baa12c5"),
                            Name = "rapeseed oil"
                        },
                        new
                        {
                            Id = new Guid("b1221915-f8a3-498e-995a-94601ea5aa39"),
                            Name = "lemon"
                        },
                        new
                        {
                            Id = new Guid("857e4064-ec7f-4a3d-9bb3-98fdde8da19e"),
                            Name = "balsemic vinegar"
                        },
                        new
                        {
                            Id = new Guid("60124aa8-c812-44b7-b766-65b4aca5c549"),
                            Name = "basil"
                        },
                        new
                        {
                            Id = new Guid("5eff5316-270d-4e15-b0ef-e383dbd3771a"),
                            Name = "potatoe"
                        },
                        new
                        {
                            Id = new Guid("f4e5958b-a80f-445e-8c47-64b01bfb39db"),
                            Name = "green beans"
                        },
                        new
                        {
                            Id = new Guid("3261fca9-e1cf-4a67-9428-835bc8b4d2ed"),
                            Name = "cherry tomato"
                        },
                        new
                        {
                            Id = new Guid("7d53c213-5fca-4f8d-8bb1-54cd80d1e013"),
                            Name = "romaine lettuce"
                        },
                        new
                        {
                            Id = new Guid("5b23662d-05ac-4f9f-9cea-21a74a199681"),
                            Name = "kalamata olive"
                        },
                        new
                        {
                            Id = new Guid("cae5e798-f7ac-4c7d-9dc6-ba39e90a8343"),
                            Name = "protein powder"
                        },
                        new
                        {
                            Id = new Guid("b2ea6a30-2803-4361-ac99-1a06fc4e0f30"),
                            Name = "chocolate chips"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Instruction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("StepNumber", "RecipeId")
                        .IsUnique();

                    b.ToTable("Instructions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7ad04e69-1c59-48cc-a977-b990f72b4644"),
                            Description = "Scramble the block of tofu with your hands (see picture above) into small and bigger pieces.",
                            RecipeId = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("983b31fd-481d-417b-8e98-ccbd053cdffd"),
                            Description = "Heat 1 tablespoon of oil on medium heat in a pan. Caramelize the chopped red onions",
                            RecipeId = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("9a6c8a81-036a-47e7-ae4f-594c357f73ae"),
                            Description = "Add the scrambled tofu and stir for 1 minute.",
                            RecipeId = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("c4470b86-9b36-46ba-95e8-c2cb293567a3"),
                            Description = "Add the 1/2 cup of oat milk and stir until the tofu has soaked up most of it.",
                            RecipeId = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            StepNumber = 4
                        },
                        new
                        {
                            Id = new Guid("0a67885d-5bdd-4985-94c3-ffbae97ce7bf"),
                            Description = "When there is only a small amount of milk remaining, add all of the remaining ingredients and stir for another 3-4 minutes on low to medium heat.",
                            RecipeId = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            StepNumber = 5
                        },
                        new
                        {
                            Id = new Guid("0b3598a3-1601-4f53-ab2f-f203d526bb14"),
                            Description = "Serve with fresh bread.",
                            RecipeId = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            StepNumber = 6
                        },
                        new
                        {
                            Id = new Guid("4f151684-06d7-4ae6-81c0-651decd07f0a"),
                            Description = "In a blender, combine all ingredients and blend until smooth.",
                            RecipeId = new Guid("9c1f4396-73f3-4d34-b942-0235d9de9228"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("8241d7e8-dbe8-48e3-b04f-596f1cb7853b"),
                            Description = "Divide between 2 cups and top with blackberries, if desired.",
                            RecipeId = new Guid("9c1f4396-73f3-4d34-b942-0235d9de9228"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("e0efc42f-08b0-4093-94f7-e19fbcbc07a2"),
                            Description = "Mash the avocado and lime juice together with sea salt.",
                            RecipeId = new Guid("892f98b6-6a36-45ff-8567-f6f229e8cb1b"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("524df98d-c787-48cd-9964-962efc975bec"),
                            Description = "Add the tuna, cilantro, red onion, celery, and jalapeños (if using). Stir everything together, breaking apart any large pieces of tuna as needed.",
                            RecipeId = new Guid("892f98b6-6a36-45ff-8567-f6f229e8cb1b"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("f9ac1a94-0364-4f76-a823-78f1ae600983"),
                            Description = "Adjust salt and jalapeños to taste if needed. Serve immediately.",
                            RecipeId = new Guid("892f98b6-6a36-45ff-8567-f6f229e8cb1b"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("f6c9014f-b374-49b7-bf28-039b04a6f4c9"),
                            Description = "In a food processor or blender, blend all ingredients except chocolate curls until smooth.",
                            RecipeId = new Guid("f6099364-c21f-4ea2-abe7-2482fad2e92b"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("6a06bb53-15f5-4605-873d-d4a36efb9b26"),
                            Description = "Transfer to serving glasses and refrigerate 30 minutes and up to 1 hour. Garnish with chocolate curls if using.",
                            RecipeId = new Guid("f6099364-c21f-4ea2-abe7-2482fad2e92b"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("9dfe54d1-0f9b-4deb-a7e1-0a6f51487b18"),
                            Description = "In a large pot over medium heat, cook bacon. When bacon is crisp, remove from pot with a slotted spoon. Add onion, celery, and peppers to pot and cook until soft, 6 minutes. Add garlic and cook until fragrant, 1 minute more.",
                            RecipeId = new Guid("fee8e67f-6f07-49ac-aca8-2b5a45afd334"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("a97d8682-82a5-47d4-a3df-49a14e8ca057"),
                            Description = "Push vegetables to one side of the pan and add beef. Cook, stirring occasionally, until no pink remains. Drain fat and return to heat.",
                            RecipeId = new Guid("fee8e67f-6f07-49ac-aca8-2b5a45afd334"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("1c151eb7-b889-4416-a16c-79fa4754e0cd"),
                            Description = "Add chili powder, cumin, oregano, and paprika and season with salt and pepper. Stir to combine and cook 2 minutes more. Add tomatoes and broth and bring to a simmer. Let cook 10 to 15 more minutes, until chili has thickened slightly. ",
                            RecipeId = new Guid("fee8e67f-6f07-49ac-aca8-2b5a45afd334"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("29c70cc7-5053-49ef-995a-f257a9b8e720"),
                            Description = "Ladle into bowls and top with reserved bacon, jalapeños, cilantro, and avocado.",
                            RecipeId = new Guid("fee8e67f-6f07-49ac-aca8-2b5a45afd334"),
                            StepNumber = 4
                        },
                        new
                        {
                            Id = new Guid("31060047-f3f4-4d40-a760-5390f59d18cd"),
                            Description = "In a blender, blend together ice cream and milk.",
                            RecipeId = new Guid("56344d33-e648-4008-a8fc-df24da3d51e3"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("31a801b9-0287-409a-b115-b1a5a7fec055"),
                            Description = "Pour into a glass and garnish with whipped topping, sprinkles, cacao powder and a cherry.",
                            RecipeId = new Guid("56344d33-e648-4008-a8fc-df24da3d51e3"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("1af614c6-c7bc-49cf-ac13-f1684f62021c"),
                            Description = "Preheat oven to 400 degrees F (204 C) and line a baking sheet with parchment paper (or lightly grease with non-stick spray).",
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("e36cce47-1720-4233-9a4a-461280a94b44"),
                            Description = "In the meantime wrap tofu in a clean, absorbent towel and set something heavy on top (such as a cast iron skillet) to press out the liquid.",
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("e96b1887-f227-4577-8d5c-6f359b68da20"),
                            Description = "Once the oven is preheated, dice tofu into 1/4-inch cubes and arrange on baking sheet. Bake for 26-30 minutes. You’re looking for golden brown edges and a texture that’s firm to the touch. The longer it bakes, the firmer and crispier it will become, so if you’re looking for softer tofu remove from the oven around the 26-28 minute mark. I prefer crispy tofu, so I bake mine the full 30 minutes. Set aside.",
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("061fe121-07af-4f27-8a0a-a2c4de0957f0"),
                            Description = "While the tofu bakes prepare your rice by bringing 12 cups of water to a boil in a large pot. Once boiling, add rinsed rice and stir. Boil on high uncovered for 30 minutes, then strain for 10 seconds and return to pot removed from the heat. Cover with a lid and let steam for 10 minutes*.",
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            StepNumber = 4
                        },
                        new
                        {
                            Id = new Guid("9f6a91ec-12f3-49bc-a134-352a1438cdc1"),
                            Description = "While rice and tofu are cooking, prepare sauce by adding all ingredients to a medium-size mixing bowl and whisking to combine. Taste and adjust flavor as needed, adding more tamari or soy sauce for saltiness, peanut butter for creaminess, brown sugar for sweetness, or chili garlic sauce for heat.",
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            StepNumber = 5
                        },
                        new
                        {
                            Id = new Guid("e68b9260-2c8c-41a4-8589-a968684fb57a"),
                            Description = "Once the tofu is done baking, add directly to the sauce and marinate for 5 minutes, stirring occasionally",
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            StepNumber = 6
                        },
                        new
                        {
                            Id = new Guid("59a79981-92a8-4f10-91c7-86916dcf859f"),
                            Description = "Heat a large metal or cast iron skillet over medium heat. Once hot, use a slotted spoon to scoop the tofu into the pan leaving most of the sauce behind. Cook for 3-4 minutes, stirring occasionally, until deep golden brown on all sides (see photo). Lower heat if browning too quickly. Remove from pan and set aside.",
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            StepNumber = 7
                        },
                        new
                        {
                            Id = new Guid("27c38827-7ee2-485b-b57b-eae1c0f3ad40"),
                            Description = "To the still hot pan add garlic, green onion, peas and carrots. Sauté for 3-4 minutes, stirring occasionally, and season with 1 Tbsp (15 ml) tamari or soy sauce",
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            StepNumber = 8
                        },
                        new
                        {
                            Id = new Guid("f9d7398f-5c6a-46d2-aead-cebaa6ebb68d"),
                            Description = "Add cooked rice, tofu, and remaining sauce and stir. Cook over medium-high heat for 3-4 minutes, stirring frequently.",
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            StepNumber = 9
                        },
                        new
                        {
                            Id = new Guid("fe0f2b73-499b-487a-91ad-d693ff046408"),
                            Description = "Serve immediately with extra chili garlic sauce or sriracha for heat (optional). Crushed salted, roasted peanuts or cashews make a lovely additional garnish. Leftovers keep well in the refrigerator for 3-4 days, though best when fresh. Reheat in a skillet over medium heat or in the microwave.",
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            StepNumber = 10
                        },
                        new
                        {
                            Id = new Guid("2ba57f48-d658-43de-9d3e-08a2b30c3427"),
                            Description = "Sift flour, baking powder, sugar, and salt together in a large bowl. Make a well in the center and add milk, melted butter, and egg; mix until smooth.",
                            RecipeId = new Guid("23edcc6c-6c39-4ec2-9f2b-e7eb220e0231"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("323b44b6-9b2c-47be-8164-c92e67fc7ea0"),
                            Description = "Heat a lightly oiled griddle or pan over medium-high heat. Pour or scoop the batter onto the griddle, using approximately 1/4 cup for each pancake; cook until bubbles form and the edges are dry, about 2 to 3 minutes. Flip and cook until browned on the other side. Repeat with remaining batter.",
                            RecipeId = new Guid("23edcc6c-6c39-4ec2-9f2b-e7eb220e0231"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("12c9b72c-434d-461b-bb1b-73a8768d7bd5"),
                            Description = "Mix the dressing ingredients together in a small bowl with 1 tbsp water.",
                            RecipeId = new Guid("8e080386-e385-425f-a569-51b83adef1fe"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("d92e49c8-c754-44ca-b400-b00da69671bc"),
                            Description = "Meanwhile boil the potatoes for 7 mins, add the beans and boil 5 mins more or until both are just tender, then drain. Boil 2 eggs for 8 minutes then shell and halve.",
                            RecipeId = new Guid("8e080386-e385-425f-a569-51b83adef1fe"),
                            StepNumber = 2
                        },
                        new
                        {
                            Id = new Guid("a5ad88cc-c9ab-4099-b0d1-5fe1ed39c5f4"),
                            Description = "Toss the beans, potatoes and remaining salad ingredients, except the eggs, together in a large bowl with half the dressing. Arrange the eggs on top and drizzle over the remaining dressing.",
                            RecipeId = new Guid("8e080386-e385-425f-a569-51b83adef1fe"),
                            StepNumber = 3
                        },
                        new
                        {
                            Id = new Guid("df35ca17-b4f3-49d3-a771-edac2757edbc"),
                            Description = "Stir all ingredients except optional chips to form a dough. Either shape into bars with your hands or smooth into a lined 8×8 pan, refrigerate until chilled, then cut into bars.",
                            RecipeId = new Guid("6f1720f6-ad8f-48d8-ad08-6edc321e4d7b"),
                            StepNumber = 1
                        },
                        new
                        {
                            Id = new Guid("e54ff64d-c0f2-4d14-8604-8b9f04c6b445"),
                            Description = "For the optional chocolate coating, spread the melted chocolate over the pan before chilling. (I usually stir 2 tsp oil into the melted chocolate for a smoother sauce, but it's not required.) Or you can dip the bars into the chocolate sauce individually and then chill to set.",
                            RecipeId = new Guid("6f1720f6-ad8f-48d8-ad08-6edc321e4d7b"),
                            StepNumber = 2
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CookTime")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("DietId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PrepTime")
                        .HasColumnType("int");

                    b.Property<int>("Servings")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DietId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("b25380fd-a7db-4af2-81dc-a2f7eedd8616"),
                            CookTime = 30,
                            Description = "A healthy vegan breakfast",
                            DietId = new Guid("938ea0e0-5336-49e6-b0df-b4aef759dd08"),
                            ImgURL = "https://simpleveganblog.com/wp-content/uploads/2022/07/tofu-scramble-1.jpg",
                            PrepTime = 15,
                            Servings = 2,
                            Title = "Scrambled Tofu"
                        },
                        new
                        {
                            Id = new Guid("9c1f4396-73f3-4d34-b942-0235d9de9228"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            CategoryId = new Guid("b1c6f419-022e-4a39-9635-eb49610afb1a"),
                            CookTime = 10,
                            Description = "A smoothie containing 3 types of berries",
                            DietId = new Guid("f0541e43-d655-4572-9c66-9bfba26a626d"),
                            ImgURL = "https://cookingformysoul.com/wp-content/uploads/2022/05/mixed-berry-smoothie-2-min.jpg",
                            PrepTime = 5,
                            Servings = 2,
                            Title = "Tripple berry smoothie"
                        },
                        new
                        {
                            Id = new Guid("892f98b6-6a36-45ff-8567-f6f229e8cb1b"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("3e9d01b1-4f05-4730-b72c-a4a2c9227c7c"),
                            CookTime = 5,
                            Description = "A fast and healthy lunch, packed with protein, for people in a hurry",
                            DietId = new Guid("f0541e43-d655-4572-9c66-9bfba26a626d"),
                            ImgURL = "https://www.wholesomeyum.com/wp-content/uploads/2019/05/wholesomeyum-avocado-tuna-salad-recipe-1.jpg",
                            PrepTime = 5,
                            Servings = 2,
                            Title = "Tuna avocado salad"
                        },
                        new
                        {
                            Id = new Guid("f6099364-c21f-4ea2-abe7-2482fad2e92b"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("8e23a30d-950a-4fcd-8514-9b4a0bd221cd"),
                            CookTime = 60,
                            Description = "This keto mousse gets its rich, creamy texture from avocados.",
                            DietId = new Guid("4244b52a-dc39-4c24-91e9-4aa15f14ca42"),
                            ImgURL = "https://thebigmansworld.com/wp-content/uploads/2022/07/keto-chocolate-mousse.jpg",
                            PrepTime = 15,
                            Servings = 2,
                            Title = "Keto Chocolate Mousse"
                        },
                        new
                        {
                            Id = new Guid("fee8e67f-6f07-49ac-aca8-2b5a45afd334"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("63088f18-a5a4-4774-a919-11cb0b59d6f2"),
                            CookTime = 40,
                            Description = "A hearty bowl of chili is the perfect dinner for a blustery winter day.",
                            DietId = new Guid("fecf1bc5-d3ef-4646-8eb0-3dfd87111b09"),
                            ImgURL = "https://www.laurafuentes.com/wp-content/uploads/2013/10/Paleo_chili_recipe-card_1-2.jpg",
                            PrepTime = 15,
                            Servings = 2,
                            Title = "Paleo Chili"
                        },
                        new
                        {
                            Id = new Guid("56344d33-e648-4008-a8fc-df24da3d51e3"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("b1c6f419-022e-4a39-9635-eb49610afb1a"),
                            CookTime = 5,
                            Description = "This easy milkshake recipe gives you the perfect ratio of milk to ice cream and is completely customizable! ",
                            DietId = new Guid("f0541e43-d655-4572-9c66-9bfba26a626d"),
                            ImgURL = "https://images.unsplash.com/photo-1568901839119-631418a3910d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8bWlsa3NoYWtlfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60",
                            PrepTime = 5,
                            Servings = 1,
                            Title = "Easy Vanilla Milkshake"
                        },
                        new
                        {
                            Id = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("3e9d01b1-4f05-4730-b72c-a4a2c9227c7c"),
                            CookTime = 60,
                            Description = "Easy, 10-ingredient vegan fried rice that’s loaded with vegetables, crispy baked tofu, and tons of flavor! A healthy, satisfying plant-based side dish or entrée.",
                            DietId = new Guid("938ea0e0-5336-49e6-b0df-b4aef759dd08"),
                            ImgURL = "https://shortgirltallorder.com/wp-content/uploads/2020/03/veggie-fried-rice-square-4.jpg",
                            PrepTime = 15,
                            Servings = 4,
                            Title = "Easy Vegan Fried Rice"
                        },
                        new
                        {
                            Id = new Guid("23edcc6c-6c39-4ec2-9f2b-e7eb220e0231"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CategoryId = new Guid("8e23a30d-950a-4fcd-8514-9b4a0bd221cd"),
                            CookTime = 15,
                            Description = "I found this pancake recipe in my Grandma's recipe book. Judging from the weathered look of this recipe card, this was a family favorite.",
                            DietId = new Guid("f0541e43-d655-4572-9c66-9bfba26a626d"),
                            ImgURL = "https://images.unsplash.com/photo-1565299543923-37dd37887442?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=781&q=80",
                            PrepTime = 5,
                            Servings = 8,
                            Title = "Good Old-Fashioned Pancakes"
                        },
                        new
                        {
                            Id = new Guid("8e080386-e385-425f-a569-51b83adef1fe"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            CategoryId = new Guid("edc0a329-aaa6-4290-8ea9-446844ba4f47"),
                            CookTime = 10,
                            Description = "A vegetarian Niçoise salad, that's packed with goodness - fibre, folate, iron, vitamin c and gluten-free too",
                            DietId = new Guid("29034587-2814-4d82-ad04-4b92dd7e7a87"),
                            ImgURL = "https://images.unsplash.com/photo-1512621776951-a57141f2eefd?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80",
                            PrepTime = 10,
                            Servings = 2,
                            Title = "Egg Niçoise salad"
                        },
                        new
                        {
                            Id = new Guid("6f1720f6-ad8f-48d8-ad08-6edc321e4d7b"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            CategoryId = new Guid("166135bb-92aa-407d-b07c-20847ccbab75"),
                            CookTime = 5,
                            Description = "If you’re still buying protein bars at the store, this quick and simple vegan protein bar recipe might completely change your life…",
                            DietId = new Guid("f0541e43-d655-4572-9c66-9bfba26a626d"),
                            ImgURL = "https://images.unsplash.com/photo-1622484212850-eb596d769edc?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80",
                            PrepTime = 5,
                            Servings = 10,
                            Title = "Easy Homemade Protein Bars"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.RecipeIngredient", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IngredientId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UnitId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            IngredientId = new Guid("ac4c89ec-3197-459c-b73e-0bae67fe7a45"),
                            RecipeId = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            Amount = 1.0,
                            UnitId = new Guid("58cae114-6f93-47e0-9fb0-b3a081c8f281")
                        },
                        new
                        {
                            IngredientId = new Guid("8f27980d-9715-4ae0-9862-d9a31b463643"),
                            RecipeId = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            Amount = 0.5,
                            UnitId = new Guid("54722cb6-99f3-4631-b700-e2d310647848")
                        },
                        new
                        {
                            IngredientId = new Guid("d733c8f2-af08-43a8-bd07-66736c165214"),
                            RecipeId = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            Amount = 0.5,
                            UnitId = new Guid("54722cb6-99f3-4631-b700-e2d310647848")
                        },
                        new
                        {
                            IngredientId = new Guid("ca2199b7-f8dc-4e90-bc70-5f035379f293"),
                            RecipeId = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            Amount = 0.5,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("81aacc33-28ff-4134-8e57-a3a389ebd6ba"),
                            RecipeId = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            Amount = 0.75,
                            UnitId = new Guid("6ca91187-59cf-49ef-bb4a-caf57af5253e")
                        },
                        new
                        {
                            IngredientId = new Guid("ddb921d6-0db4-42d7-b8f9-79aefe6ab7a1"),
                            RecipeId = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            Amount = 1.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("90fd3b57-8529-4ebb-8d20-cb050134659b"),
                            RecipeId = new Guid("9c1f4396-73f3-4d34-b942-0235d9de9228"),
                            Amount = 1.0,
                            UnitId = new Guid("54722cb6-99f3-4631-b700-e2d310647848")
                        },
                        new
                        {
                            IngredientId = new Guid("745c7145-c67d-417a-bff5-f7d89dcfbc2d"),
                            RecipeId = new Guid("9c1f4396-73f3-4d34-b942-0235d9de9228"),
                            Amount = 250.0,
                            UnitId = new Guid("69d2b0cd-8239-4a2d-a8f5-fbb5cd8be3cc")
                        },
                        new
                        {
                            IngredientId = new Guid("7314a433-7ed7-460e-b9c7-9d164c61f173"),
                            RecipeId = new Guid("9c1f4396-73f3-4d34-b942-0235d9de9228"),
                            Amount = 200.0,
                            UnitId = new Guid("22796b4b-f15d-48ee-89e5-90e6495951b4")
                        },
                        new
                        {
                            IngredientId = new Guid("588ac87c-5e0c-408e-a03b-429344f90b48"),
                            RecipeId = new Guid("9c1f4396-73f3-4d34-b942-0235d9de9228"),
                            Amount = 150.0,
                            UnitId = new Guid("22796b4b-f15d-48ee-89e5-90e6495951b4")
                        },
                        new
                        {
                            IngredientId = new Guid("357effcd-160c-4126-a470-01d5e0109216"),
                            RecipeId = new Guid("9c1f4396-73f3-4d34-b942-0235d9de9228"),
                            Amount = 150.0,
                            UnitId = new Guid("22796b4b-f15d-48ee-89e5-90e6495951b4")
                        },
                        new
                        {
                            IngredientId = new Guid("ccc5bd14-e3f0-45c5-9da2-d6bffb143a04"),
                            RecipeId = new Guid("9c1f4396-73f3-4d34-b942-0235d9de9228"),
                            Amount = 150.0,
                            UnitId = new Guid("22796b4b-f15d-48ee-89e5-90e6495951b4")
                        },
                        new
                        {
                            IngredientId = new Guid("77e3f942-11f8-4777-8c22-bdd6a9a6bf20"),
                            RecipeId = new Guid("892f98b6-6a36-45ff-8567-f6f229e8cb1b"),
                            Amount = 2.0,
                            UnitId = new Guid("54722cb6-99f3-4631-b700-e2d310647848")
                        },
                        new
                        {
                            IngredientId = new Guid("55378261-d8d3-45f8-826f-6d70ebf6caac"),
                            RecipeId = new Guid("892f98b6-6a36-45ff-8567-f6f229e8cb1b"),
                            Amount = 140.0,
                            UnitId = new Guid("22796b4b-f15d-48ee-89e5-90e6495951b4")
                        },
                        new
                        {
                            IngredientId = new Guid("ee40da14-1c7d-4986-b06a-d22cdcc84257"),
                            RecipeId = new Guid("892f98b6-6a36-45ff-8567-f6f229e8cb1b"),
                            Amount = 2.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("14ae69a7-6687-4541-b7de-01127e92792b"),
                            RecipeId = new Guid("892f98b6-6a36-45ff-8567-f6f229e8cb1b"),
                            Amount = 0.5,
                            UnitId = new Guid("6ca91187-59cf-49ef-bb4a-caf57af5253e")
                        },
                        new
                        {
                            IngredientId = new Guid("5d9247a4-f9db-4e3d-b861-133bb1d4cbd0"),
                            RecipeId = new Guid("892f98b6-6a36-45ff-8567-f6f229e8cb1b"),
                            Amount = 3.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("dcf97f85-7af4-49ff-a89a-27806742abff"),
                            RecipeId = new Guid("892f98b6-6a36-45ff-8567-f6f229e8cb1b"),
                            Amount = 1.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("8f27980d-9715-4ae0-9862-d9a31b463643"),
                            RecipeId = new Guid("892f98b6-6a36-45ff-8567-f6f229e8cb1b"),
                            Amount = 3.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("77e3f942-11f8-4777-8c22-bdd6a9a6bf20"),
                            RecipeId = new Guid("f6099364-c21f-4ea2-abe7-2482fad2e92b"),
                            Amount = 2.0,
                            UnitId = new Guid("54722cb6-99f3-4631-b700-e2d310647848")
                        },
                        new
                        {
                            IngredientId = new Guid("31954772-5363-4681-9cdd-88e462fc7617"),
                            RecipeId = new Guid("f6099364-c21f-4ea2-abe7-2482fad2e92b"),
                            Amount = 0.75,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("c40532ee-a38a-47e9-8898-3cb9e476f16e"),
                            RecipeId = new Guid("f6099364-c21f-4ea2-abe7-2482fad2e92b"),
                            Amount = 0.5,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("f34d7d0f-4bf0-40bd-bf31-368403138aab"),
                            RecipeId = new Guid("f6099364-c21f-4ea2-abe7-2482fad2e92b"),
                            Amount = 0.25,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("dc1acf67-02ce-4195-8501-313f9ca9ca96"),
                            RecipeId = new Guid("f6099364-c21f-4ea2-abe7-2482fad2e92b"),
                            Amount = 3.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("97fd73c1-4fa4-4ee3-b74c-7f3f1a575e3d"),
                            RecipeId = new Guid("f6099364-c21f-4ea2-abe7-2482fad2e92b"),
                            Amount = 1.0,
                            UnitId = new Guid("6ca91187-59cf-49ef-bb4a-caf57af5253e")
                        },
                        new
                        {
                            IngredientId = new Guid("6692d32b-cce3-45f7-8551-6daac00157d7"),
                            RecipeId = new Guid("f6099364-c21f-4ea2-abe7-2482fad2e92b"),
                            Amount = 0.5,
                            UnitId = new Guid("6ca91187-59cf-49ef-bb4a-caf57af5253e")
                        },
                        new
                        {
                            IngredientId = new Guid("1396e93a-41d7-4984-a274-184b77e0afa6"),
                            RecipeId = new Guid("fee8e67f-6f07-49ac-aca8-2b5a45afd334"),
                            Amount = 1.0,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("75591f19-3a32-48df-9c8e-19b4b0f2920d"),
                            RecipeId = new Guid("fee8e67f-6f07-49ac-aca8-2b5a45afd334"),
                            Amount = 0.5,
                            UnitId = new Guid("54722cb6-99f3-4631-b700-e2d310647848")
                        },
                        new
                        {
                            IngredientId = new Guid("4883e3d8-8418-4111-ae27-e7173bd11a2a"),
                            RecipeId = new Guid("fee8e67f-6f07-49ac-aca8-2b5a45afd334"),
                            Amount = 2.0,
                            UnitId = new Guid("54722cb6-99f3-4631-b700-e2d310647848")
                        },
                        new
                        {
                            IngredientId = new Guid("f2d486d4-3319-4352-b1a2-add18993ed23"),
                            RecipeId = new Guid("fee8e67f-6f07-49ac-aca8-2b5a45afd334"),
                            Amount = 0.5,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("016d40e9-2717-47ed-aea1-c5c17ea30cf3"),
                            RecipeId = new Guid("fee8e67f-6f07-49ac-aca8-2b5a45afd334"),
                            Amount = 2.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("8bd1d2e8-1d8c-49ba-ad3d-526dae7cbc30"),
                            RecipeId = new Guid("fee8e67f-6f07-49ac-aca8-2b5a45afd334"),
                            Amount = 2.0,
                            UnitId = new Guid("6ca91187-59cf-49ef-bb4a-caf57af5253e")
                        },
                        new
                        {
                            IngredientId = new Guid("083f7222-e473-4143-9cb7-e1af84851dd0"),
                            RecipeId = new Guid("fee8e67f-6f07-49ac-aca8-2b5a45afd334"),
                            Amount = 2.0,
                            UnitId = new Guid("6ca91187-59cf-49ef-bb4a-caf57af5253e")
                        },
                        new
                        {
                            IngredientId = new Guid("08136d5c-60e5-4194-9519-71eed7e43c6b"),
                            RecipeId = new Guid("fee8e67f-6f07-49ac-aca8-2b5a45afd334"),
                            Amount = 2.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("2cbbdaf1-0d36-482d-80e0-37d3423664c3"),
                            RecipeId = new Guid("56344d33-e648-4008-a8fc-df24da3d51e3"),
                            Amount = 1.5,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("81aba039-743f-4d59-b213-285ba4fd3097"),
                            RecipeId = new Guid("56344d33-e648-4008-a8fc-df24da3d51e3"),
                            Amount = 1.5,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("bdc470ec-50b2-4e17-a15f-05449117af4e"),
                            RecipeId = new Guid("56344d33-e648-4008-a8fc-df24da3d51e3"),
                            Amount = 0.0,
                            UnitId = new Guid("65bbef54-0532-4b1a-a32d-eed284c585ea")
                        },
                        new
                        {
                            IngredientId = new Guid("9ff9358d-76ee-4703-895b-d0a1371da3b1"),
                            RecipeId = new Guid("56344d33-e648-4008-a8fc-df24da3d51e3"),
                            Amount = 0.0,
                            UnitId = new Guid("65bbef54-0532-4b1a-a32d-eed284c585ea")
                        },
                        new
                        {
                            IngredientId = new Guid("dc1acf67-02ce-4195-8501-313f9ca9ca96"),
                            RecipeId = new Guid("56344d33-e648-4008-a8fc-df24da3d51e3"),
                            Amount = 0.5,
                            UnitId = new Guid("6ca91187-59cf-49ef-bb4a-caf57af5253e")
                        },
                        new
                        {
                            IngredientId = new Guid("ac4c89ec-3197-459c-b73e-0bae67fe7a45"),
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            Amount = 1.0,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("628442fa-5b33-4801-81ff-0e785ff2b276"),
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            Amount = 1.0,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("fbc241d8-d78f-43d9-894b-d8884307b3f5"),
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            Amount = 4.0,
                            UnitId = new Guid("2d206a67-fdd4-4ee6-a56b-acd67111f8b1")
                        },
                        new
                        {
                            IngredientId = new Guid("f272bf89-f85e-4424-94de-a2e2677ca461"),
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            Amount = 1.0,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("e1ad2b89-4a1e-4bce-80c0-811ff9a4c336"),
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            Amount = 0.5,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("72c4a267-5cdc-4b9b-9cb8-29046548d981"),
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            Amount = 0.5,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("7c3e5129-4674-4302-a9c7-445ad1003d0f"),
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            Amount = 3.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("5f928a6f-af9e-4dff-80af-3a2ef3e0deb1"),
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            Amount = 2.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("514c7f84-86ca-4698-a64f-afcfc9862ba8"),
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            Amount = 1.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("2be6e6be-2730-49b1-b3a6-d8bcc83ca23d"),
                            RecipeId = new Guid("a5dd677b-e134-45c8-a5d8-f3dc65a528e2"),
                            Amount = 1.0,
                            UnitId = new Guid("6ca91187-59cf-49ef-bb4a-caf57af5253e")
                        },
                        new
                        {
                            IngredientId = new Guid("4df4f98a-8dbe-4a84-b58c-5857ec0c2fc4"),
                            RecipeId = new Guid("23edcc6c-6c39-4ec2-9f2b-e7eb220e0231"),
                            Amount = 1.5,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("5ef2c63d-11fe-414d-b2a6-744c00f0e63b"),
                            RecipeId = new Guid("23edcc6c-6c39-4ec2-9f2b-e7eb220e0231"),
                            Amount = 3.5,
                            UnitId = new Guid("6ca91187-59cf-49ef-bb4a-caf57af5253e")
                        },
                        new
                        {
                            IngredientId = new Guid("29d04ae2-aaff-445e-b5ab-88d1c63b4036"),
                            RecipeId = new Guid("23edcc6c-6c39-4ec2-9f2b-e7eb220e0231"),
                            Amount = 1.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("14ae69a7-6687-4541-b7de-01127e92792b"),
                            RecipeId = new Guid("23edcc6c-6c39-4ec2-9f2b-e7eb220e0231"),
                            Amount = 0.25,
                            UnitId = new Guid("6ca91187-59cf-49ef-bb4a-caf57af5253e")
                        },
                        new
                        {
                            IngredientId = new Guid("81aba039-743f-4d59-b213-285ba4fd3097"),
                            RecipeId = new Guid("23edcc6c-6c39-4ec2-9f2b-e7eb220e0231"),
                            Amount = 1.25,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("6210ff3a-3eae-41ab-9b32-f03f9b6ec22a"),
                            RecipeId = new Guid("23edcc6c-6c39-4ec2-9f2b-e7eb220e0231"),
                            Amount = 3.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("3ad0ee1f-bddc-4347-9b98-9f5a963a804f"),
                            RecipeId = new Guid("23edcc6c-6c39-4ec2-9f2b-e7eb220e0231"),
                            Amount = 1.0,
                            UnitId = new Guid("54722cb6-99f3-4631-b700-e2d310647848")
                        },
                        new
                        {
                            IngredientId = new Guid("5f928a6f-af9e-4dff-80af-3a2ef3e0deb1"),
                            RecipeId = new Guid("23edcc6c-6c39-4ec2-9f2b-e7eb220e0231"),
                            Amount = 1.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("571e7109-ba66-4b22-ad12-71403baa12c5"),
                            RecipeId = new Guid("8e080386-e385-425f-a569-51b83adef1fe"),
                            Amount = 2.0,
                            UnitId = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518")
                        },
                        new
                        {
                            IngredientId = new Guid("b1221915-f8a3-498e-995a-94601ea5aa39"),
                            RecipeId = new Guid("8e080386-e385-425f-a569-51b83adef1fe"),
                            Amount = 1.0,
                            UnitId = new Guid("54722cb6-99f3-4631-b700-e2d310647848")
                        },
                        new
                        {
                            IngredientId = new Guid("857e4064-ec7f-4a3d-9bb3-98fdde8da19e"),
                            RecipeId = new Guid("8e080386-e385-425f-a569-51b83adef1fe"),
                            Amount = 1.0,
                            UnitId = new Guid("6ca91187-59cf-49ef-bb4a-caf57af5253e")
                        },
                        new
                        {
                            IngredientId = new Guid("fbc241d8-d78f-43d9-894b-d8884307b3f5"),
                            RecipeId = new Guid("8e080386-e385-425f-a569-51b83adef1fe"),
                            Amount = 1.0,
                            UnitId = new Guid("2d206a67-fdd4-4ee6-a56b-acd67111f8b1")
                        },
                        new
                        {
                            IngredientId = new Guid("60124aa8-c812-44b7-b766-65b4aca5c549"),
                            RecipeId = new Guid("8e080386-e385-425f-a569-51b83adef1fe"),
                            Amount = 0.0,
                            UnitId = new Guid("65bbef54-0532-4b1a-a32d-eed284c585ea")
                        },
                        new
                        {
                            IngredientId = new Guid("3ad0ee1f-bddc-4347-9b98-9f5a963a804f"),
                            RecipeId = new Guid("8e080386-e385-425f-a569-51b83adef1fe"),
                            Amount = 2.0,
                            UnitId = new Guid("54722cb6-99f3-4631-b700-e2d310647848")
                        },
                        new
                        {
                            IngredientId = new Guid("5eff5316-270d-4e15-b0ef-e383dbd3771a"),
                            RecipeId = new Guid("8e080386-e385-425f-a569-51b83adef1fe"),
                            Amount = 250.0,
                            UnitId = new Guid("22796b4b-f15d-48ee-89e5-90e6495951b4")
                        },
                        new
                        {
                            IngredientId = new Guid("f4e5958b-a80f-445e-8c47-64b01bfb39db"),
                            RecipeId = new Guid("8e080386-e385-425f-a569-51b83adef1fe"),
                            Amount = 200.0,
                            UnitId = new Guid("22796b4b-f15d-48ee-89e5-90e6495951b4")
                        },
                        new
                        {
                            IngredientId = new Guid("7d53c213-5fca-4f8d-8bb1-54cd80d1e013"),
                            RecipeId = new Guid("8e080386-e385-425f-a569-51b83adef1fe"),
                            Amount = 15.0,
                            UnitId = new Guid("22796b4b-f15d-48ee-89e5-90e6495951b4")
                        },
                        new
                        {
                            IngredientId = new Guid("5b23662d-05ac-4f9f-9cea-21a74a199681"),
                            RecipeId = new Guid("8e080386-e385-425f-a569-51b83adef1fe"),
                            Amount = 6.0,
                            UnitId = new Guid("54722cb6-99f3-4631-b700-e2d310647848")
                        },
                        new
                        {
                            IngredientId = new Guid("514c7f84-86ca-4698-a64f-afcfc9862ba8"),
                            RecipeId = new Guid("6f1720f6-ad8f-48d8-ad08-6edc321e4d7b"),
                            Amount = 1.5,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("cae5e798-f7ac-4c7d-9dc6-ba39e90a8343"),
                            RecipeId = new Guid("6f1720f6-ad8f-48d8-ad08-6edc321e4d7b"),
                            Amount = 0.75,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("5f928a6f-af9e-4dff-80af-3a2ef3e0deb1"),
                            RecipeId = new Guid("6f1720f6-ad8f-48d8-ad08-6edc321e4d7b"),
                            Amount = 0.25,
                            UnitId = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10")
                        },
                        new
                        {
                            IngredientId = new Guid("14ae69a7-6687-4541-b7de-01127e92792b"),
                            RecipeId = new Guid("6f1720f6-ad8f-48d8-ad08-6edc321e4d7b"),
                            Amount = 0.5,
                            UnitId = new Guid("6ca91187-59cf-49ef-bb4a-caf57af5253e")
                        },
                        new
                        {
                            IngredientId = new Guid("b2ea6a30-2803-4361-ac99-1a06fc4e0f30"),
                            RecipeId = new Guid("6f1720f6-ad8f-48d8-ad08-6edc321e4d7b"),
                            Amount = 35.0,
                            UnitId = new Guid("22796b4b-f15d-48ee-89e5-90e6495951b4")
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateTimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("145c080f-b26f-426e-ac4d-8ea6122ae106"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            Comment = "Great recipe!",
                            CreationDate = new DateTime(2023, 7, 14, 9, 57, 6, 855, DateTimeKind.Local).AddTicks(2239),
                            Rating = 4,
                            RecipeId = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            UpdateTimeStamp = new DateTime(2023, 7, 14, 9, 57, 6, 855, DateTimeKind.Local).AddTicks(2275)
                        },
                        new
                        {
                            Id = new Guid("fba3ced0-ba3a-47fa-8a3a-380e4a8256a2"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000003",
                            Comment = "Didn't taste good",
                            CreationDate = new DateTime(2022, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2,
                            RecipeId = new Guid("fbc9515e-7593-450c-b409-018ea0cd7603"),
                            UpdateTimeStamp = new DateTime(2022, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c987942a-8972-4490-84fe-1e9390bf24e6"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            CreationDate = new DateTime(2022, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3,
                            RecipeId = new Guid("9c1f4396-73f3-4d34-b942-0235d9de9228"),
                            UpdateTimeStamp = new DateTime(2022, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c13854c3-313a-451d-9a1f-42ab1ffcc86c"),
                            ApplicationUserId = "00000000-0000-0000-0000-000000000002",
                            Comment = "Definitely will eat this again!",
                            CreationDate = new DateTime(2022, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 5,
                            RecipeId = new Guid("9c1f4396-73f3-4d34-b942-0235d9de9228"),
                            UpdateTimeStamp = new DateTime(2022, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22796b4b-f15d-48ee-89e5-90e6495951b4"),
                            Name = "grams"
                        },
                        new
                        {
                            Id = new Guid("69d2b0cd-8239-4a2d-a8f5-fbb5cd8be3cc"),
                            Name = "ml"
                        },
                        new
                        {
                            Id = new Guid("872ecfad-ed7e-4905-8395-fcc6fbdd9518"),
                            Name = "tbsp"
                        },
                        new
                        {
                            Id = new Guid("6ca91187-59cf-49ef-bb4a-caf57af5253e"),
                            Name = "tsp"
                        },
                        new
                        {
                            Id = new Guid("54722cb6-99f3-4631-b700-e2d310647848"),
                            Name = "piece"
                        },
                        new
                        {
                            Id = new Guid("58cae114-6f93-47e0-9fb0-b3a081c8f281"),
                            Name = "block"
                        },
                        new
                        {
                            Id = new Guid("894cd115-5526-45a1-b0e2-2cd412d76a10"),
                            Name = "cup"
                        },
                        new
                        {
                            Id = new Guid("65bbef54-0532-4b1a-a32d-eed284c585ea"),
                            Name = "garnish"
                        },
                        new
                        {
                            Id = new Guid("2d206a67-fdd4-4ee6-a56b-acd67111f8b1"),
                            Name = "clove"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000001",
                            ConcurrencyStamp = "1122e952-b5e1-4db4-bce6-0f5129f4b6c3",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000002",
                            ConcurrencyStamp = "dc4e1d2e-22da-4ee5-8d04-e05e22470235",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "sub",
                            ClaimValue = "00000000-0000-0000-0000-000000000001",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "ImiAdmin",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                            ClaimValue = "admin@imi.be",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "hasApprovedTerms",
                            ClaimValue = "",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "Admin",
                            UserId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "sub",
                            ClaimValue = "00000000-0000-0000-0000-000000000002",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "ImiUser",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                            ClaimValue = "user@imi.be",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "hasApprovedTerms",
                            ClaimValue = "True",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "User",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "sub",
                            ClaimValue = "00000000-0000-0000-0000-000000000003",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ClaimValue = "ImiRefuser",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                            ClaimValue = "refuser@imi.be",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "hasApprovedTerms",
                            ClaimValue = "False",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ClaimValue = "User",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000001",
                            RoleId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000002",
                            RoleId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000003",
                            RoleId = "00000000-0000-0000-0000-000000000002"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.FavoriteRecipe", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("FavoriteRecipes")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Recipe", "Recipe")
                        .WithMany("FavoriteRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Instruction", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.Recipe", "Recipe")
                        .WithMany("Instructions")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Recipe", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("Imi.Project.Api.Core.Entities.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Imi.Project.Api.Core.Entities.Diet", "Diet")
                        .WithMany("Recipes")
                        .HasForeignKey("DietId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("Category");

                    b.Navigation("Diet");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Review", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Recipe", "Recipe")
                        .WithMany("Reviews")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.ApplicationUser", b =>
                {
                    b.Navigation("FavoriteRecipes");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Diet", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Recipe", b =>
                {
                    b.Navigation("FavoriteRecipes");

                    b.Navigation("Instructions");

                    b.Navigation("RecipeIngredients");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
